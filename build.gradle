buildscript {
    configurations.classpath {
        resolutionStrategy {
            force 'org.eclipse.jgit:org.eclipse.jgit:5.3.1.201904271842-r'
        }
    }

    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

plugins {
    id 'com.palantir.git-version' version '0.12.3'
    id 'maven-publish'
}

apply plugin: 'net.minecraftforge.gradle'

version = "1.15.2-${gitVersion()}"
group = 'net.lessqq.rconfix' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'rconfix'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'snapshot', version: '20200514-1.15.1'
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                rconfix {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                rconfix {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'rconfix', '--all', '--output', file('src/generated/resources/')

            mods {
                rconfix {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.15.2-31.2.9'
}

jar {
    manifest {
        attributes 'Specification-Title': archivesBaseName
        attributes 'Specification-Vendor': 'fraenkelc'
        attributes 'Specification-Version': "1"
        attributes 'Implementation-Title': archivesBaseName
        attributes 'Implementation-Vendor': 'fraenkelc'
        attributes 'Implementation-Version': version

        attributes 'Maven-Artifact': "${project.group}:${project.archivesBaseName}:${project.version}"
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')

publishing {
    publications {
        rconNewlineFix(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            artifact jar
            pom {
                name = archivesBaseName
                description = archivesBaseName
                url = 'https://github.com/fraenkelc/RCONNewlineFix'
                scm {
                    url = 'https://github.com/fraenkelc/RCONNewlineFix'
                    connection = 'scm:git:git://github.com:fraenkelc/RCONNewlineFix.git'
                    connection = 'scm:git:git@github.com:fraenkelc/RCONNewlineFix.git'
                }

                issueManagement {
                    system = 'github'
                    url = 'https://github.com/fraenkelc/RCONNewlineFix/issues'
                }
                licenses {
                    license {
                        name = "MIT"
                        url = "https://github.com/fraenkelc/RCONNewlineFix/raw/master/LICENSE"
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'fraenkelc'
                        name = 'fraenkelc'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
def signingProps = file("signing.properties");
if (signingProps.exists()) {
    println("Loading signing properties from signing.properties")
    signingProps.withReader { reader ->
        def userProps = new Properties()
        userProps.load(reader)
        ext['signing'] = userProps
    }
} else {
    println("No signing properties found.")
}

task signJar(type: net.minecraftforge.gradle.common.task.SignJar) {
    mustRunAfter("reobfJar")
    onlyIf { project.hasProperty('signing') }
    if (project.hasProperty('signing')) {
        keyStore = project.signing.keyStore
        alias = 'rconfix'
        storePass = project.signing.keyStorePass
        keyPass = project.signing.keyStoreKeyPass
        inputFile = jar.archivePath
        outputFile = jar.archivePath
    }
}

jar.finalizedBy(signJar)
